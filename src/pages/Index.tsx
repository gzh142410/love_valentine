import { useState } from 'react';
import QuizCard from '../components/QuizCard';
import WishCard from '../components/WishCard';
import { Heart, HeartPulse, Gift, Sparkles } from 'lucide-react';
import AudioPlayer from '../components/AudioPlayer';
import FallingHearts from '../components/FallingHearts';

const Index = () => {
    const [currentQuizIndex, setCurrentQuizIndex] = useState(0);
    const [showWishes, setShowWishes] = useState(false);

    const quizzes = [
        {
            question: 'ƒêi·ªÅu g√¨ khi·∫øn t√¨nh y√™u tr·ªü n√™n ƒë·∫∑c bi·ªát?',
            options: ['V√¨ n√≥ l√† m√≥n qu√† v√¥ gi√°', 'V√¨ n√≥ l√†m cu·ªôc s·ªëng c√≥ √Ω nghƒ©a h∆°n', 'V√¨ n√≥ bi·∫øn nh·ªØng ƒëi·ªÅu b√¨nh th∆∞·ªùng th√†nh phi th∆∞·ªùng', 'T·∫•t c·∫£ c√°c c√¢u tr√™n'],
            correctAnswer: 'T·∫•t c·∫£ c√°c c√¢u tr√™n'
        },
        {
            question: 'Y√™u l√† g√¨?',
            options: ['L√† tha th·ª© m·ªçi l·ªói l·∫ßm', 'L√† ch·∫•p nh·∫≠n m·ªçi khuy·∫øt ƒëi·ªÉm', 'L√† c√πng nhau tr∆∞·ªüng th√†nh', 'T·∫•t c·∫£ c√°c c√¢u tr√™n'],
            correctAnswer: 'T·∫•t c·∫£ c√°c c√¢u tr√™n'
        }
    ];

    const wishes = [
        {
            wish: 'M·ªói kho·∫£nh kh·∫Øc b√™n ch·ªã ƒë·ªÅu l√† nh·ªØng k·ª∑ ni·ªám ƒë·∫πp m√† em s·∫Ω tr√¢n tr·ªçng m√£i m√£i. ',
            from: 'Ch·ªã Loan cute hehe '
        }
    ];

    const handleCorrectAnswer = () => {
        if (currentQuizIndex < quizzes.length - 1) {
            setTimeout(() => {
                setCurrentQuizIndex(currentQuizIndex + 1);
            }, 1000);
        } else {
            setShowWishes(true);
        }
    };

    return (
        <div className='relative min-h-screen bg-gradient-to-br from-valentine-light via-white to-valentine-pink p-6 overflow-hidden'>
            <FallingHearts />
            <AudioPlayer />
            <div className='relative z-10 max-w-4xl mx-auto'>
                <div className='text-center mb-12 animate-fade-up'>
                    <div className='flex justify-center gap-2 mb-4'>
                        <HeartPulse className='w-8 h-8 text-valentine-purple animate-float' />
                        <Heart className='w-8 h-8 text-valentine-purple animate-float delay-100' />
                        <Gift className='w-8 h-8 text-valentine-purple animate-float delay-200' />
                    </div>
                    <div className='relative inline-block'>
                        <h1 className='text-5xl font-bold text-valentine-dark mb-2 bg-clip-text text-transparent bg-gradient-to-r from-valentine-purple to-pink-400'>Valentine's Day</h1>
                        <Sparkles className='absolute -top-4 -right-8 w-6 h-6 text-yellow-400 animate-pulse' />
                        <Sparkles className='absolute -bottom-2 -left-8 w-6 h-6 text-yellow-400 animate-pulse delay-300' />
                    </div>
                    <p className='text-valentine-purple text-lg mt-4 font-medium'>H√£y c√πng nhau kh√°m ph√° nh·ªØng c√¢u ƒë·ªë v·ªÅ t√¨nh y√™u nh√©! üíù</p>
                </div>

                <div className='relative'>
                    {!showWishes ? (
                        <div className='transform transition-all hover:scale-102'>
                            <QuizCard {...quizzes[currentQuizIndex]} onCorrectAnswer={handleCorrectAnswer} />
                        </div>
                    ) : (
                        <div className='grid gap-6 md:grid-cols-2 animate-fade-up'>
                            {wishes.map((wish, index) => (
                                <WishCard key={index} {...wish} />
                            ))}
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default Index;
