import { useState } from 'react';
import QuizCard from '../components/QuizCard';
import WishCard from '../components/WishCard';
import { Heart, HeartPulse, Gift, Sparkles } from 'lucide-react';
import AudioPlayer from '../components/AudioPlayer';
import FallingHearts from '../components/FallingHearts';

const Index = () => {
    const [currentQuizIndex, setCurrentQuizIndex] = useState(0);
    const [showWishes, setShowWishes] = useState(false);

    const quizzes = [
        {
            question: 'ƒêi·ªÅu g√¨ l√†m n√™n m·ªôt t√¨nh y√™u ƒë·∫πp?',
            options: ['S·ª± ch√¢n th√†nh v√† tin t∆∞·ªüng', 'S·ª± th·∫•u hi·ªÉu v√† chia s·∫ª', 'C√πng nhau v∆∞·ª£t qua kh√≥ khƒÉn', 'T·∫•t c·∫£ c√°c ƒëi·ªÅu tr√™n'],
            correctAnswer: 'T·∫•t c·∫£ c√°c ƒëi·ªÅu tr√™n'
        },
        {
            question: 'T√¨nh y√™u gi·ªëng nh∆∞ ƒëi·ªÅu g√¨ nh·∫•t?',
            options: ['Nh∆∞ √°nh n·∫Øng s∆∞·ªüi ·∫•m t√¢m h·ªìn', 'Nh∆∞ d√≤ng su·ªëi m√°t l√†nh', 'Nh∆∞ b√†i h√°t ng·ªçt ng√†o', 'Nh∆∞ c√°nh hoa t∆∞∆°i th·∫Øm'],
            correctAnswer: 'Nh∆∞ √°nh n·∫Øng s∆∞·ªüi ·∫•m t√¢m h·ªìn'
        },
        {
            question: 'ƒêi·ªÅu g√¨ l√† quan tr·ªçng nh·∫•t trong t√¨nh y√™u?',
            options: ['S·ª± ch√¢n th√†nh', 'L√≤ng th·ªßy chung', 'S·ª± quan t√¢m', 'T·∫•t c·∫£ ƒë·ªÅu quan tr·ªçng nh∆∞ nhau'],
            correctAnswer: 'T·∫•t c·∫£ ƒë·ªÅu quan tr·ªçng nh∆∞ nhau'
        },
        {
            question: 'T√¨nh y√™u ƒë·∫πp nh·∫•t khi n√†o?',
            options: ['Khi ta bi·∫øt hy sinh v√¨ nhau', 'Khi ta lu√¥n b√™n nhau m·ªçi l√∫c', 'Khi ta c√πng nhau tr∆∞·ªüng th√†nh', 'T·∫•t c·∫£ c√°c th·ªùi ƒëi·ªÉm tr√™n'],
            correctAnswer: 'T·∫•t c·∫£ c√°c th·ªùi ƒëi·ªÉm tr√™n'
        }
    ];

    const wishes = [
        {
            wish: 'Anh th·∫≠t may m·∫Øn khi c√≥ em trong cu·ªôc ƒë·ªùi n√†y. Em l√† ƒëi·ªÅu tuy·ªát v·ªùi nh·∫•t m√† ƒë·ªãnh m·ªánh ƒë√£ mang ƒë·∫øn cho anh. Y√™u em th·∫≠t nhi·ªÅu!',
            from: 'Nguy·ªÖn Nguy√™n Gi√°p with love from Nguy·ªÖn Th·ªã Hu·ªá'
        },
        {
            wish: 'M·ªói ng√†y ƒë∆∞·ª£c th·ª©c d·∫≠y v√† bi·∫øt r·∫±ng c√≥ em t·ªìn t·∫°i tr√™n ƒë·ªùi n√†y l√† ƒë·ªông l·ª±c ƒë·ªÉ anh c·ªë g·∫Øng tr·ªü th√†nh phi√™n b·∫£n t·ªët h∆°n c·ªßa ch√≠nh m√¨nh.',
            from: 'B√© MOn'
        },
        {
            wish: 'C·∫£m ∆°n em ƒë√£ ƒë·∫øn v√† l√†m cho cu·ªôc s·ªëng c·ªßa anh tr·ªü n√™n t∆∞∆°i ƒë·∫πp h∆°n. Anh h·ª©a s·∫Ω lu√¥n ·ªü b√™n, y√™u th∆∞∆°ng v√† che ch·ªü cho em.',
            from: 'Gi√°p Zech'
        },
        {
            wish: 'Em bi·∫øt kh√¥ng, m·ªói n·ª• c∆∞·ªùi c·ªßa em l√† m·ªôt m√≥n qu√† qu√Ω gi√° v·ªõi anh. Anh mong ƒë∆∞·ª£c th·∫•y em c∆∞·ªùi m·ªói ng√†y v√† l√†m em h·∫°nh ph√∫c m√£i m√£i.',
            from: 'Love Hu·ªá Nguy·ªÖn From Gi√°p Zech'
        }
    ];

    const handleCorrectAnswer = () => {
        if (currentQuizIndex < quizzes.length - 1) {
            setTimeout(() => {
                setCurrentQuizIndex(currentQuizIndex + 1);
            }, 1000);
        } else {
            setShowWishes(true);
        }
    };

    return (
        <div className='relative min-h-screen bg-gradient-to-br from-valentine-light via-white to-valentine-pink p-6 overflow-hidden'>
            <FallingHearts />
            <AudioPlayer />
            <div className='relative z-10 max-w-4xl mx-auto'>
                <div className='text-center mb-12 animate-fade-up'>
                    <div className='flex justify-center gap-2 mb-4'>
                        <HeartPulse className='w-8 h-8 text-valentine-purple animate-float' />
                        <Heart className='w-8 h-8 text-valentine-purple animate-float delay-100' />
                        <Gift className='w-8 h-8 text-valentine-purple animate-float delay-200' />
                    </div>
                    <div className='relative inline-block'>
                        <h1 className='text-5xl font-bold text-valentine-dark mb-2 bg-clip-text text-transparent bg-gradient-to-r from-valentine-purple to-pink-400'>Chuy·ªán T√¨nh Y√™u C·ªßa Ch√∫ng Ta</h1>
                        <Sparkles className='absolute -top-4 -right-8 w-6 h-6 text-yellow-400 animate-pulse' />
                        <Sparkles className='absolute -bottom-2 -left-8 w-6 h-6 text-yellow-400 animate-pulse delay-300' />
                    </div>
                    <p className='text-valentine-purple text-lg mt-4 font-medium'>H√£y c√πng nhau kh√°m ph√° nh·ªØng ƒëi·ªÅu th√∫ v·ªã v·ªÅ t√¨nh y√™u c·ªßa ch√∫ng ta nh√©! üíù</p>
                </div>

                <div className='relative'>
                    {!showWishes ? (
                        <div className='transform transition-all hover:scale-102'>
                            <QuizCard {...quizzes[currentQuizIndex]} onCorrectAnswer={handleCorrectAnswer} />
                        </div>
                    ) : (
                        <div className='grid gap-6 md:grid-cols-2 animate-fade-up'>
                            {wishes.map((wish, index) => (
                                <WishCard key={index} {...wish} />
                            ))}
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default Index;
